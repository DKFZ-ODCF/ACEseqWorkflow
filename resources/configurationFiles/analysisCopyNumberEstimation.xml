<!--
  ~ Copyright (c) 2017 The ACEseq workflow developers.
  ~
  ~ Distributed under the MIT License (license terms are at https://www.github.com/eilslabs/ACEseqWorkflow/LICENSE.txt).
  -->

<configuration name='copyNumberEstimationAnalysis' description='CNV Calling for NGS data.'
               configurationType='analysis' class='de.dkfz.roddy.core.Analysis' workflowClass='de.dkfz.b080.co.aceseq.ACESeqWorkflow'
               runtimeServiceClass='de.dkfz.b080.co.common.BasicCOProjectsRuntimeService'
               imports="commonCOWorkflowsSettings"
               listOfUsedTools="mergeAndFilterSnpFiles,cnvSnpGeneration,annotateCnvFiles,imputeGenotypes,imputeGenotypes_X,addHaplotypesToSnpFile,getBreakpoints,mergeBreakpointsAndSv,getSegmentsAndSnps,markHomozygousDeletions"
               usedToolFolders="copyNumberEstimationWorkflow,cobasetools">
    <configurationvalues>

    <!--BINARIES-->
        <cvalue name="HTSLIB_VERSION" value="0.2.5" type="string"/>
        <cvalue name="PERL_VERSION" value="5.20.2" type="string"/>
        <cvalue name="PYTHON_VERSION" value="2.7.9" type="string"/>
        <cvalue name="RSCRIPT_VERSION" value="3.3.1" type="string"/>
        <cvalue name='BEDTOOLS_VERSION' value='2.16.2' type='string'/>
        <cvalue name="VCFTOOLS_VERSION" value="0.1.10" type="string"/>
        <cvalue name="SAMTOOLS_VERSION" value="0.1.19" type="string"/>

    <!--ENVIRONMENT (see tools section below for possible values) -->
        <cvalue name="workflowEnvironmentScript" value="${TOOL_WORKFLOW_ENVIRONMENT_CONDA_TBI_PBS}" type="string"
                description="Use ${TOOL_WORKFLOW_ENVIRONMENT_CONDA} for a generic Conda environment."/>
        <!--<cvalue name="workflowEnvironmentScript" value="${TOOL_WORKFLOW_ENVIRONMENT_TBI_PBS}" type="string"/>-->
        <!--<cvalue name="correctGcBiasEnvironmentScript" value="${TOOL_CORRECT_GC_BIAS_ENVIRONMENT_CONDA}" type="string"/>-->
        <cvalue name="condaEnvironmentName" value="ACEseqWorkflow" type="string"
                description="Name of the Conda environment on the execution hosts. Used by the environment setup script conda.sh defined as tool below."/>

	<!--outputMask-->
        <cvalue name='outputUMask' value='007' type='string'/>
        <cvalue name='outputFileGroup' value='B080'/>
        <cvalue name='outputAccessRights' value='u+rw,g+rw,o-rwx'/>
        <cvalue name='outputAccessRightsForDirectories' value='u+rwx,g+rwx,o-rwx'/>

        <cvalue name='possibleControlSampleNamePrefixes' value='( blood BLOOD normal control CONTROL buffy_coat GERMLINE )' type='bashArray'/>
        <cvalue name='possibleTumorSampleNamePrefixes' value='( tumor TUMOR metastasis xenograft disease DISEASE relapse RELAPSE autopsy AUTOPSY metastasis METASTASIS )' type='bashArray'/>


	<!-- Reference files -->
        <cvalue name="baseDirectoryReference" value="/icgc/ngs_share/assemblies/hg19_GRCh37_1000genomes" type="path"/>
        <cvalue name="referenceGenome_1KGRef" value="${baseDirectoryReference}/sequence/1KGRef/hs37d5.fa" type="path"/>
        <cvalue name='REFERENCE_GENOME' value="${referenceGenome_1KGRef}" type="string" />
        <cvalue name="dbSNP_FILE" value="${baseDirectoryReference}/databases/dbSNP/dbSNP_135/00-All.SNV.vcf.gz" type="path"/>
        <cvalue name="MAPPABILITY_FILE" value="${baseDirectoryReference}/databases/UCSC/wgEncodeCrgMapabilityAlign100mer_chr.bedGraph.gz" type="path"/>
        <cvalue name="CHROMOSOME_LENGTH_FILE" value="${baseDirectoryReference}/stats/chrlengths.txt" type="path"/>
        <cvalue name="REPLICATION_TIME_FILE" value="${baseDirectoryReference}/databases/ENCODE/ReplicationTime_10cellines_mean_10KB.Rda" type="path"/>
        <cvalue name="GC_CONTENT_FILE" value="${baseDirectoryReference}/stats/hg19_GRch37_100genomes_gc_content_10kb.txt" type="path"/>

	<!-- Impute -->
        <cvalue name='imputeBaseDirectory' value="${baseDirectoryReference}/databases/1000genomes/IMPUTE/" type="path"/>
        <cvalue name='GENETIC_MAP_FILE'               value="${imputeBaseDirectory}/ALL.integrated_phase1_SHAPEIT_16-06-14.nomono/genetic_map_chr${CHR_NAME}_combined_b37.txt" type="path"/>
        <cvalue name='KNOWN_HAPLOTYPES_FILE'          value="${imputeBaseDirectory}/ALL.integrated_phase1_SHAPEIT_16-06-14.nomono/ALL.chr${CHR_NAME}.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.nomono.haplotypes.gz" type="path"/>
        <cvalue name='KNOWN_HAPLOTYPES_LEGEND_FILE'   value="${imputeBaseDirectory}/ALL.integrated_phase1_SHAPEIT_16-06-14.nomono/ALL.chr${CHR_NAME}.integrated_phase1_v3.20101123.snps_indels_svs.genotypes.nomono.legend.gz"
                type="path"/>
        <cvalue name='GENETIC_MAP_FILE_X'             value="${imputeBaseDirectory}/ALL_1000G_phase1integrated_v3_impute/genetic_map_chrX_nonPAR_combined_b37.txt" type="path"/>
        <cvalue name='KNOWN_HAPLOTYPES_FILE_X'        value="${imputeBaseDirectory}/ALL_1000G_phase1integrated_v3_impute/ALL_1000G_phase1integrated_v3_chrX_nonPAR_impute.hap.gz" type="path"/>
        <cvalue name='KNOWN_HAPLOTYPES_LEGEND_FILE_X' value="${imputeBaseDirectory}/ALL_1000G_phase1integrated_v3_impute/ALL_1000G_phase1integrated_v3_chrX_nonPAR_impute.legend.gz" type="path"/>

	<!-- Input and output paths -->
        <cvalue name='outputExecutionDirectory' value='${outputAnalysisBaseDirectory}/exec_${executionTimeString}' />
        <cvalue name='mergedBamSuffix' value='merged.mdup.bam' type="string" description="A list of all known suffixes for merged bam files. I.e. merged.dupmark.bam, merged.mdup.bam..." />
        <cvalue name='mergedBamSuffixList' value='${mergedBamSuffix}' type="string" description="A list of all known suffixes for merged bam files. I.e. merged.dupmark.bam, merged.mdup.bam..." />
        <cvalue name='defaultMergedBamSuffix' value='${mergedBamSuffix}' type="string" description="The default suffix for merged bam files when they are created by Roddy." />

        <cvalue name='aceseqOutputDirectory' value='${outputAnalysisBaseDirectory}/ACEseq_${tumorSample}' type="path"/>
        <cvalue name='svOutputDirectory' value='${outputAnalysisBaseDirectory}/SOPHIA_${tumorSample}_${controlSample}' type="path"/>
        <cvalue name='crestOutputDirectory' value='${outputAnalysisBaseDirectory}/crest' type="path"/>
        <cvalue name='cnvSnpOutputDirectory' value='${aceseqOutputDirectory}/cnv_snp' type="path"/>
        <cvalue name='imputeOutputDirectory' value='${aceseqOutputDirectory}/phasing' type="path"/>
        <cvalue name='plotOutputDirectory' value='${aceseqOutputDirectory}/plots' type="path"/>


	<!-- ACEseq parameters-->
        <cvalue name="test" value="" type="string" description="value to be set to 'test' in case this is run on a smaller not WGS bamfile to speed up testing, required for impute2"/>
	<cvalue name='runWithoutControl' value='false' type='boolean' description="use control for analysis (false|true)"/>

        <cvalue name='CHR_NR' value='${CHR_PREFIX}${PARM_CHR_INDEX}${CHR_SUFFIX}' type="string"/>
        <cvalue name='CHR_NAME' value='${PARM_CHR_INDEX}' type="string"/>
        <cvalue name='CHROMOSOME_INDICES_OPTIMIZED_CNV_SNV_MPILEUP' value='( 2 1 3 5 4 6 8 12 7 11 10 9 X 16 13 15 14 18 17 19 20 22 21 Y )' type='bashArray'/>
        <cvalue name='AUTOSOME_INDICES' value='( {1..22} )' type='bashArray'/>

        <cvalue name='SV' value='yes' type='string' description='include SV breakpoints in analysis (yes|no)'/>

        <cvalue name='runOnPancan' value='false' type='boolean'/>

        <cvalue name='libloc_PSCBS' value='' type='string' description="path to PSCBS library in R"/>
        <cvalue name='libloc_flexclust' value='' type='string' description="path to felxclust library in R"/>


        <!--cnv_snpMpileup Opts-->
        <cvalue name="mpileup_qual" value="0" type="integer" description="quality used for parameter 'Q' in samtools mpileup"/>
        <cvalue name='CNV_MPILEUP_OPTS' value='"-A -R -B -Q ${mpileup_qual} -q 1 -I "' type="string" description="options for mpileup to determine which bases/reads to use"/>

	<!--addHaplotypes Opts-->
        <cvalue name="FILE_VCF_SUF" value="vcf" type="string" description="suffix for vcf files"/>
        <cvalue name="FILE_TXT_SUF" value="txt" type="string" description="suffix for txt files"/>
        <cvalue name='phasedGenotypesFilePrefix' value='phased_chr' type="string" description="prefix for phased genotypes file" />
        <cvalue name='unphasedGenotypesFilePrefix' value='unphased_chr' type="string" description="prefix for unphased genotypes file"/>
        <cvalue name='phasedGenotypesFileSuffix' value='${FILE_VCF_SUF}' type="string" description="suffix for phased genotypes file" />
        <cvalue name='unphasedGenotypesFileSuffix' value='${FILE_VCF_SUF}' type="string" description="suffix for unphased genotypes file" />

        <!--impute2 opts-->
        <cvalue name='BCFTOOLS_OPTS' value='"-vgN "' type="string" description="bcftools options for imputation" />
        <cvalue name="FILE_UNPHASED_PRE" value="${imputeOutputDirectory}/${unphasedGenotypesFilePrefix}" type="path"/>
        <cvalue name="FILE_UNPHASED_GENOTYPE" value="${imputeOutputDirectory}/unphased_genotype_chr" type="path"/>
        <cvalue name="FILE_PHASED_PRE" value="${imputeOutputDirectory}/${phasedGenotypesFilePrefix}" type="path"/>
        <cvalue name="FILE_PHASED_GENOTYPE" value="${imputeOutputDirectory}/phased_genotype_chr" type="path"/>
        <cvalue name="FILE_INFO" value="info" type="string"/>
        <cvalue name="FILE_INFO_SAMPLE" value="info_by_sample" type="string"/>
        <cvalue name="FILE_HAPS" value="haps" type="string"/>
        <cvalue name="FILE_HAPS_CONF" value="haps_confidence" type="string"/>
        <cvalue name="FILE_SUMMARY" value="summary" type="string"/>
        <cvalue name="FILE_WARNINGS" value="warnings" type="string"/>
        <cvalue name="FILE_PART" value="part" type="string"/>
        <cvalue name="FILE_SAMPLE_G" value="${imputeOutputDirectory}/sample_g.txt" type="path" description="sample_g file used by imputation on X chromosome for females"/>
        <cvalue name="minHT" value="5" type="integer" description="minimum number of consecutive SNPs to be considered for haploblocks"/>

        <!--snvMergeFilter Opts-->
        <cvalue name='SNP_VCF_CNV_PATH' value='${cnvSnpOutputDirectory}/${pid}.chr' type="path" description="If the value is changed the value for the filename pattern MUST also be changed."/>
        <cvalue name='SNP_VCF_CNV_PATH_STR' value='${SNP_VCF_CNV_PATH}' type="string" description="This value must be converted to a string because of a bug."/>
        <cvalue name='SNP_SUFFIX' value='snp.tab.gz' type="string"/>
        <cvalue name='snp_min_coverage' value='5' type="integer"/>

	<cvalue name='MALE_FAKE_CONTROL_PRE' value="pathToPID/${pid}/ACEseq/cnv_snp/${pid}.chr" type='path' 
		description="path and prefix to chromosome-wise 1kb coverage file used for fake control workflow for male patients" /> 
	<cvalue name='FEMALE_FAKE_CONTROL_PRE' value="pathToPID/${pid}/ACEseq/cnv_snp/${pid}.chr" type='path'
		description="path and prefix to chromosome-wise 1kb coverage file used for fake control workflow for female patients" /> 
	<cvalue name='FAKE_CONTROL_POST' value=".cnv.anno.tab.gz" type='string' description="suffix for chromosome wise 1kb coverage files used for fake control workflow"/> 
	<cvalue name='PATIENTSEX' value="male" type='string' description="patient sex used in case of no control workflow (male|female|klinefelter)" /> 

        <!--annotateCnvFiles Opts-->
        <cvalue name='CNV_ANNO_SUFFIX' value='cnv.anno.tab.gz' type="string"
		description="suffix for mappability annotated chromosome-wise 1kb coverage files" /> 
        <cvalue name='CNV_SUFFIX' value='cnv.tab.gz' type="string"
		description="suffix chromosome-wise 1kb coverage files" /> 
        <cvalue name='min_X_ratio' value='0.8' type="float" 
		description="minimum ratio for number of reads on chrY per base over number of reads per base over whole genome to be considered as female" />
        <cvalue name='min_Y_ratio' value='0.12' type="float"
		description="minimum ratio for number of reads on chrY per base over number of reads per base over whole genome to be considered as male" />

        <!--cnvMergeFilter Opts-->
        <cvalue name='cnv_min_coverage' value='5000' type="integer"
		description="minimum coverage for 1kb windows to be considered for merging in 10kb windows"/>
        <cvalue name='mapping_quality' value='1000' type="integer"
		description="minimum mapping quality for 1kb windows to be considered for merging in 10kb windows (maximum mappability)"/>
        <cvalue name='min_windows' value='5' type="integer"
		description="minimum number of 1kb windows fullfilling cnv_min_coverage and mapping_quality to obtain merged 10kb windows"/>

        <!--correctGC Opts-->
        <cvalue name='LOWESS_F' value='0.1' type="float" description="f parameter for R lowess function"/>
        <cvalue name='SCALE_FACTOR' value='0.9' type="float" description="scale_factor for R lowess function"/>
        <cvalue name='COVERAGEPLOT_YLIMS' value='4' type="float" description="ylims for Rplots in GC-bias plots"/>
        <cvalue name='FILENAME_GC_CORRECT_PLOT' value='${plotOutputDirectory}/${pid}_gc_corrected.png' type="path"
		description="gc-bias plot, before/during/after correction"/>
        <cvalue name='GC_bias_json_key' value='gc-bias' type="string" description="key in GC-bias json"/>

        <!--getBreakpointsAndMergeCrest/datatablePSCBSgaps Opts-->
        <cvalue name='FILE_DENSITYBETA' value='${aceseqOutputDirectory}/densityBeta.pdf' type="path"/>
        <cvalue name='min_DDI_length' value='1000' type="integer" description="minimum length for DEL/DUP/INV to be considered for breakpoint integration"/>
        <cvalue name='selSVColumn' value='eventScore' type="string" description="column from bedpe file to be recored in ${pid}_sv_points.txt file"/>

        <!--getSegmentsAndSnps/pscbsAll Opts-->
        <cvalue name='min_seg_width' value='2000' type="integer" description="segmentByPairedPSCBS() minwidth parameter in PSCBS R package"/>
        <cvalue name='undo_SD' value='24' type="integer" description="segmentByPairedPSCBS() undo.SD parameter in PSCBS R package"/>
        <cvalue name='pscbs_prune_height' value='0' type="integer" description="pruneByHClust() parameter h in PSCBS R package"/>

        <!--markSegsWithHomozygDel Opts-->
        <cvalue name='min_segment_map' value='0.6' type="float" description="minimum average mappability over segment to be kept after segmentation"/>

        <!--clusterAndPruneSegments Opts-->
        <cvalue name='min_seg_length_prune' value='9000' type="integer" 
		description="maximum of segment to be considered for merging to neighbouring segment prior to clustering"/>
        <cvalue name='min_num_SNPs' value='15' type="integer"
		description="maximum number of SNPs in segment to be considered for merging to neighbouring segment prior to clustering"/>
        <cvalue name='clustering' value='yes' type="string"
		description="should segments be clustered (yes|no), coerage and BAF will be estimated and assigned clusterwide"/>
        <cvalue name='min_cluster_number' value='1' type="integer"
		description="minimum number of clusters to be tried with BIC"/>
        <cvalue name='min_membership' value='0.8' type="float" description="obsolete" />
        <cvalue name='min_distance' value='0.05' type="float" description="min_distance"/>
        <cvalue name='haplogroupFilePrefix' value='haploblocks_chr' type="string" description="prefix for file with haplogroups per chromosome"/>
        <cvalue name='haplogroupFileSuffix' value='txt' type="string" description="suffix for file with haplogroups per chromosome"/>
        <cvalue name='haplogroupFilePath' value='${imputeOutputDirectory}/${haplogroupFilePrefix}' type="path"/>

        <!--estimatePurityPloidy Opts-->
        <cvalue name='minLim' value='0.47' type="float" 
		description="obsolete"/>
        <cvalue name='maxLim' value='0.53' type="float"
		description="obsolete"/>

        <!--estimatePurityPloidy Opts-->
        <cvalue name='min_length_purity' value='1000000' type="integer" description="minimum length of segments to be considered for tumor cell content and ploidy estimation"/>
        <cvalue name='min_hetSNPs_purity' value='500' type="integer"
		description="minimum number of control heterozygous SNPs in segments to be considered for tumor cell content and ploidy estimation"/>
        <cvalue name='dh_stop' value='max' type="string"/>
        <cvalue name='min_length_dh_stop' value='1000000' type="integer"/>
        <cvalue name='dh_zero' value='no' type="string"/>
        <cvalue name='purity_min' value='0.3' type="float" description="minimum tumor cell content allowed"/>
        <cvalue name='purity_max' value='1.0' type="float" description="i"/>
        <cvalue name='ploidy_min' value='1.0' type="float"/>
        <cvalue name='ploidy_max' value="6.5" type="float"/>

        <!--generatePlots opts-->
        <cvalue name='PLOT_PRE' value="${aceseqOutputDirectory}/${pid}_plot" type="path"/>

        <!--generateVCF opts-->
	<cvalue name="blacklistFileName" value='artifact.homoDels.potentialArtifacts.txt' type="string"/>
	<cvalue name="centromerFilename" value='centromers.hg19.txt' type="string"/>
        <cvalue name='FILE_MOST_IMPORTANT_INFO_SEG_PRE' value="${pid}_most_important_info" type="string"/>
        <cvalue name='FILE_MOST_IMPORTANT_INFO_SEG_POST' value=".txt" type="string"/>

    </configurationvalues>
    <processingTools>
        <!-- Environment Setup Scripts -->
        <!-- Workflow environment. The tool name for the complete workflow environment is "workflowEnvironment_${environmentTool}" or
             "workflow_environment_${environmentTool}". -->
        <tool name="workflowEnvironment_condaTbiPbs" value="conda_tbi-pbs-cluster.sh" basepath="copyNumberEstimationWorkflow/environments"/>
        <tool name="workflowEnvironment_conda" value="conda.sh" basepath="copyNumberEstimationWorkflow/environments"/>
        <tool name="workflowEnvironment_modules" value="tbi-lsf-cluster.sh" basepath="copyNumberEstimationWorkflow/environments"/>
        <tool name="workflowEnvironment_tbiPbs" value="tbi-pbs-cluster.sh" basepath="copyNumberEstimationWorkflow/environments"/>

        <!-- Cluster-job specific environments.
             Tool-specific environments override the global workflows environment. You can reference the tool name
             (1) prefixed with TOOL_, (2) with all capitals prefixed by an underscore '-', (3) in all capitals.
             The 'correctGcBiasEnvironment_conda' therefore becomes TOOL_CORRECT_GC_BIAS_ENVIRONMENT_CONDA. -->
        <!--<tool name="correctGcBiasEnvironment_conda" value="correctGCBias_conda.sh" basepath="copyNumberEstimationWorkflow/environments"/>-->

        <!-- cnvSnpGeneration = TOOL_SNP_CNV_GENERATION -->
        <tool name="snpPosCnvWinGenerator" value="snp_cnv.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="mergeFilterSnp" value="merge_and_filter_snp.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="annotateCnvVcf" value="annotate_vcf.pl" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addMappability" value="addMappability.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="fakeControl" value="replaceControlACEseq.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="estimateSex" value="getSex.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="mergeFilterCnv" value="merge_and_filter_cnv.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="getHetSnps" value="getHetSNPs.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="impute" value="impute2" basepath="copyNumberEstimationWorkflow"/>
        <tool name="embedHaplotypesVcf" value="embed_haplotypes_vcf.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="extractGenotypeVcf" value="extract_genotype_vcf.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="groupHaplotypes" value="group_genotypes.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="estimateSex" value="getSex.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addHaplotype" value="add_haplotypes.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="createBafPlots" value="createBAFplots.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="correctGcBiasR" value="correctGCBias.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="convertToJson" value="convertTabToJson.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="defineBreakpoints" value="datatable_and_PSCBSgaps.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addSvToPscbsGaps" value="PSCBSgabs_plus_sv_points.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addCrestToPscbsGaps" value="PSCBSgabs_plus_CRESTpoints.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="pscbsSegmentation" value="pscbs_all.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addHomozygousDeletion" value="homozygous_deletion.pl" basepath="copyNumberEstimationWorkflow"/>
        <tool name="addSegmentsToSnpData" value="segments_to_data.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="clusterFunctions" value="cluster_functions.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="manualPruningSegments" value="manual_pruning.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="adjustAlleleAssignment" value="adjustAlleleFreqs.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="estimatePeaks" value="purity_ploidy.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="parseVcf" value="parseVcf.pl" basepath="copyNumberEstimationWorkflow"/>
        <tool name="parseJson" value="parseJson.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="removeBreakpoints" value="removeBreakpoints.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="mergeArtifacts" value="mergeArtifacts.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="smoothData" value="smoothData.py" basepath="copyNumberEstimationWorkflow"/>
        <tool name="hrdEstimation" value="HRD_estimation.R" basepath="copyNumberEstimationWorkflow"/>

        <tool name="estimatePurityPloidy" value="purity_ploidy_estimation_final.R" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="2" cores="2" nodes="1" walltime="5"/>
            </resourcesets>
        </tool>

        <tool name="generatePlots" value="pscbs_plots.R" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="50" cores="1" nodes="1" walltime="12"/>
            </resourcesets>
        </tool>
        <tool name="plotFunctions" value="pscbs_plots_functions.R" basepath="copyNumberEstimationWorkflow"/>
        <tool name="getFinalPurityPloidy" value="getFinalPurityPloidy.py" basepath="copyNumberEstimationWorkflow"/>

        <tool name="cnvSnpGeneration" value="cnv_snvMpileup.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="2" cores="2" nodes="1" walltime="15"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_TUMOR_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_CONTROL_BAM"/>
            <input type="string" setby="callingCode" scriptparameter="PARM_CHR_INDEX"/>
            <output type="filegroup" typeof="de.dkfz.b080.co.files.CnvSnpGeneratorResultFileGroup">
                <output type="file" typeof="de.dkfz.b080.co.files.SNPPositionFile" scriptparameter="FILENAME_SNP_POS"/>
                <output type="file" typeof="de.dkfz.b080.co.files.CoverageWindowsFile" scriptparameter="FILENAME_COV_WIN"/>
            </output>
        </tool>

        <tool name="annotateCnvFiles" value="vcfAnno.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="4"/>
            </resourcesets>
        </tool>

        <tool name="replaceBadControl" value="replaceControl.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="5"/>
            </resourcesets>
	     <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
             <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT_FAKECONTROL"/>
        </tool>

         <tool name="mergeAndFilterCnvFiles" value="cnvMergeFilter.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="IGNORETHIS" passas="array"/>
            <input type="filegroup" typeof="de.dkfz.roddy.knowledge.files.GenericFileGroup" scriptparameter="COV_WIN_FILES" passas="array"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_COV_WINDOWS_WG"/>
        </tool>

        <tool name="mergeAndFilterCnvFiles_withReplaceBadControl" value="cnvMergeFilter.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT_FAKE_CONTROL" />
            <input type="filegroup" typeof="de.dkfz.roddy.knowledge.files.GenericFileGroup" scriptparameter="COV_WIN_FILES" passas="array"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" fnpatternselectiontag="covWinFileWithBadControl" scriptparameter="FILENAME_COV_WINDOWS_WG"/>
        </tool>
  
        <tool name="mergeAndFilterSnpFiles" value="snvMergeFilter.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_TUMOR_BAM"/>
            <input type="filegroup" typeof="de.dkfz.b080.co.files.SNPPositionFileGroupByChromosome" scriptparameter="SNP_POS_FILES" passas="array"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_WG"/>
        </tool>

	<tool name="getGenotypes" value="estimateGenotypes.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="1" cores="1" nodes="1" walltime="3"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_WG"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_WG_FAKE"/>
        </tool>

	<tool name="createUnphasedGenotype" value="createUnphasedFiles.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="1" nodes="1" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_WG_FAKE"/>
            <output type="filegroup" typeof="UnphasedGenotypeFileGroupByChromosome" fileclass="UnphasedGenotypeFile" scriptparameter="FILENAME_UNPHASED_GENOTYPE" passas="array"/>
    </tool>

        <!--<tool name="imputeGenotypesMeta" value="impute2_MetaScript.sh" basepath="copyNumberEstimationWorkflow">-->
            <!--<resourcesets>-->
                <!--<rset size="l" memory="48" cores="12" nodes="1" walltime="16"/>-->
            <!--</resourcesets>-->
        <!--</tool>-->

        <tool name="imputeGenotypes_noMpileup" value="impute2.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="10" cores="1" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="filegroup" typeof="UnphasedGenotypeFileGroupByChromosome" scriptparameter="FILENAME_UNPHASED_GENOTYPE" passas="array"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="withChromosomeIndex" typeof="de.dkfz.b080.co.files.PhasedGenotypeFile" scriptparameter="FILENAME_PHASED_GENOTYPES"/>
                <output type="file" fnpatternselectiontag="withChromosomeIndex" typeof="de.dkfz.b080.co.files.HaploblockGroupFile" scriptparameter="FILENAME_HAPLOBLOCK_GROUPS"/>
            </output>
        </tool>

        <tool name="imputeGenotypes_X_noMpileup" value="impute2_X.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="10" cores="1" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="filegroup" typeof="UnphasedGenotypeFileGroupByChromosome" scriptparameter="FILENAME_UNPHASED_GENOTYPE" passas="array"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="forChromosomeX" typeof="de.dkfz.b080.co.files.PhasedGenotypeFile" scriptparameter="FILENAME_PHASED_GENOTYPES"/>
                <output type="file" fnpatternselectiontag="forChromosomeX" typeof="de.dkfz.b080.co.files.HaploblockGroupFile" scriptparameter="FILENAME_HAPLOBLOCK_GROUPS"/>
            </output>
        </tool>

	<tool name="imputeGenotypes" value="impute2.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="10" cores="1" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_CONTROL_BAM"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="withChromosomeIndex" typeof="de.dkfz.b080.co.files.PhasedGenotypeFile" scriptparameter="FILENAME_PHASED_GENOTYPES"/>
                <output type="file" fnpatternselectiontag="withChromosomeIndex" typeof="de.dkfz.b080.co.files.HaploblockGroupFile" scriptparameter="FILENAME_HAPLOBLOCK_GROUPS"/>
            </output>
        </tool>

        <tool name="imputeGenotypes_X" value="impute2_X.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="10" cores="1" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.BamFile" scriptparameter="FILE_CONTROL_BAM"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="forChromosomeX" typeof="de.dkfz.b080.co.files.PhasedGenotypeFile" scriptparameter="FILENAME_PHASED_GENOTYPES"/>
                <output type="file" fnpatternselectiontag="forChromosomeX" typeof="de.dkfz.b080.co.files.HaploblockGroupFile" scriptparameter="FILENAME_HAPLOBLOCK_GROUPS"/>
            </output>
        </tool>


        <tool name="addHaplotypesToSnpFile" value="haplotypes.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_WG"/>
            <input type="filegroup" typeof="de.dkfz.b080.co.files.PhasedGenotypeFileGroupByChromosome" scriptparameter="PHASED_GENOTYPE_FILES" passas="array"/>
            <input type="file" typeof="de.dkfz.b080.co.files.PhasedGenotypeFile" scriptparameter="PHASED_GENOTYPE_X_FILE"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_HAPLO_WG"/>
        </tool>

        <tool name="createControlBafPlots" value="createControlBafPlots.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="5" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_HAPLO_WG"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_BAF_PLOT_CHECKPOINT"/>
        </tool>

        <tool name="correctGcBias" value="correct_gc_bias.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="2" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_COV_WINDOWS_WG"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="correctedWindows" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_GC_CORRECTED_WINDOWS"/>
                <output type="file" fnpatternselectiontag="tab" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_GC_CORRECTED_QUALITY"/>
                <output type="file" fnpatternselectiontag="tabSlim" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_QC_GC_CORRECTION_JSON" />
            </output>

        </tool>

        <tool name="getBreakpoints" value="datatablePSCBSgaps.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="50" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SNP_POSITIONS_HAPLO_WG"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_GC_CORRECTED_WINDOWS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="knownsegments" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_KNOWNSEGMENTS"/>
                <output type="file" fnpatternselectiontag="snpPositions" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILE_PSCBS_DATA"/>
            </output>
        </tool>

        <tool name="mergeBreakpointsAndSv" value="PSCBSgaps_SV.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_KNOWNSEGMENTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="breakpointsSvs" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_BREAKPOINTS"/>
                <output type="file" fnpatternselectiontag="svPoints" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV_POINTS"/>
            </output>
        </tool>

        <tool name="mergeBreakpointsWithoutSv" value="PSCBSgaps_SV.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_KNOWNSEGMENTS"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="breakpointsSvs" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_BREAKPOINTS"/>
                <output type="file" fnpatternselectiontag="svPoints" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV_POINTS"/>
            </output>
        </tool>

        <tool name="mergeBreakpointsAndSvCrest" value="mergePSCBSCrest.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="0.2" cores="2" nodes="1" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_KNOWNSEGMENTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CREST_DELDUPINV"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CREST_TRANSLOC"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="breakpointsSvs" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_BREAKPOINTS"/>
                <output type="file" fnpatternselectiontag="svPoints" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV_POINTS"/>
            </output>
        </tool>

        <tool name="getSegmentsAndSnps" value="PSCBSall.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="50" cores="2" nodes="1" walltime="20"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_BREAKPOINTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILE_PSCBS_DATA"/>
            <output type="file" fnpatternselectiontag="segments" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS"/>
        </tool>

        <tool name="markHomozygousDeletions" value="homozygDel.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="1" cores="1" nodes="1" walltime="1"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV_POINTS"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_HOMDEL"/>
        </tool>

        <tool name="segmentsToSnpDataHomodel" value="segmentsDataHomoDel.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="1" cores="2" nodes="1" walltime="2"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_HOMDEL"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILE_PSCBS_DATA"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE1"/>
        </tool>

        <tool name="clusterAndPruneSegments" value="clusteredPrunedNormal.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="50" cores="1" nodes="1" walltime="40"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_HOMDEL"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE1"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_GC_CORRECTED_QUALITY"/>
            <output type="tuple">
                <output type="file" fnpatternselectiontag="segments" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CLUSTERED_SEGMENTS"/>
                <output type="file" fnpatternselectiontag="snps" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE2"/>
            </output>
        </tool>

        <tool name="segmentsToSnpDataPruned" value="segmentsPrunedNormal.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="1" cores="2" nodes="1" walltime="2"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CLUSTERED_SEGMENTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE2"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE3"/>
        </tool>

        <tool name="estimatePeaksForPurity" value="purityPloidity.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="15" cores="1" nodes="1" walltime="10"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CLUSTERED_SEGMENTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE3"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_PEAKS"/>
        </tool>

        <tool name="estimatePurityAndPloidy" value="purityPloidity_EstimateFinal.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="7" cores="1" nodes="1" walltime="5"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_PEAKS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_PURITY_PLOIDY"/>
        </tool>

        <tool name="generateResultsAndPlots" value="plots.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="60" cores="1" nodes="1" walltime="15"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEGMENTS_W_PEAKS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_ALL_SNP_UPDATE3"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SV_POINTS"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_PURITY_PLOIDY"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <output type="tuple">
        	    <output type="file" fnpatternselectiontag="checkpoint" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT_PLOTS"/>
	            <output type="file" fnpatternselectiontag="json" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_PARAMETER_JSON"/>
            </output>
        </tool>

        <tool name="estimateHrdScore" value="estimateHRDScore.sh" basepath="copyNumberEstimationWorkflow">
            <resourcesets>
                <rset size="l" memory="1" cores="1" nodes="1" walltime="2"/>
            </resourcesets>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_SEX"/>
            <input type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_PARAMETER_JSON"/>
            <output type="file" typeof="de.dkfz.b080.co.files.TextFile" scriptparameter="FILENAME_CHECKPOINT_HRD"/>
        </tool>

    </processingTools>
    <filenames package='de.dkfz.b080.co.files' filestagesbase='de.dkfz.b080.co.files.COFileStage'>
        <filename class='SNPPositionFile' derivedFrom="de.dkfz.b080.co.files.BamFile" pattern='${cnvSnpOutputDirectory}/${pid}.chr${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="SNP_SUFFIX"}'/>
        <!--<filename class='SNPPositionFile' derivedFrom="de.dkfz.b080.co.files.BamFile" pattern='${outputAnalysisBaseDirectory}/${aceseqOutputDirectory}/${cnvSnpOutputDirectory}/${pid}.chr${jobParameter,name="PARM_CHR_INDEX"}.snp.tab.gz' />-->
        <filename class='CoverageWindowsFile' derivedFrom="de.dkfz.b080.co.files.BamFile" pattern='${cnvSnpOutputDirectory}/${pid}.chr${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="CNV_SUFFIX"}'/>
<!--      <filename class="PhasedGenotypeFile" onScriptParameter="FILENAME_PHASED_GENOTYPES" selectiontag="withChromosomeIndex"
                  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
        <filename class="HaploblockGroupFile" onScriptParameter="FILENAME_HAPLOBLOCK_GROUPS" selectiontag="withChromosomeIndex"
                  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>
        <filename class="PhasedGenotypeFile" onScriptParameter="FILENAME_PHASED_GENOTYPES" selectiontag="forChromosomeX"
                  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}23.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
        <filename class="HaploblockGroupFile" onScriptParameter="FILENAME_HAPLOBLOCK_GROUPS" selectiontag="forChromosomeX"
                  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}23.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>
-->
        <filename class="TextFile" onMethod="de.dkfz.b080.co.files.SNPPositionFileGroupByChromosome.mergeAndFilter" pattern='${aceseqOutputDirectory}/${pid}_all.snp.tab.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.getGenotypes" pattern='${aceseqOutputDirectory}/${pid}_all.snp.fakeBAF.tab.gz'/>

	<filename class="PhasedGenotypeFile" onTool="imputeGenotypes_noMpileup" selectiontag="withChromosomeIndex"
		  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
	<filename class="HaploblockGroupFile" onTool="imputeGenotypes_noMpileup" selectiontag="withChromosomeIndex"
		  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>
	<filename class="PhasedGenotypeFile" onTool="imputeGenotypes_X_noMpileup" selectiontag="forChromosomeX"
		  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}23.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
	<filename class="HaploblockGroupFile" onTool="imputeGenotypes_X_noMpileup" selectiontag="forChromosomeX"
		  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}23.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>

	<filename class="PhasedGenotypeFile" onTool="imputeGenotypes" selectiontag="withChromosomeIndex"
		  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
	<filename class="HaploblockGroupFile" onTool="imputeGenotypes" selectiontag="withChromosomeIndex"
		  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}${jobParameter,name="PARM_CHR_INDEX"}.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>
	<filename class="PhasedGenotypeFile" onTool="imputeGenotypes_X" selectiontag="forChromosomeX"
		  pattern='${imputeOutputDirectory}/${cvalue,name="phasedGenotypesPrefix",default="phased_chr"}23.${cvalue,name="phasedGenotypesSuffix",default="vcf"}'/>
	<filename class="HaploblockGroupFile" onTool="imputeGenotypes_X" selectiontag="forChromosomeX"
		  pattern='${imputeOutputDirectory}/${cvalue,name="haplogroupFilePrefix",default="haploblocks_chr"}23.${cvalue,name="FILE_TXT_SUFFIX",default="txt"}'/>


        <filename class="UnphasedGenotypeFile" derivedFrom="TextFile" 
                  pattern='${imputeOutputDirectory}/${cvalue, name="unphasedGenotypesPrefix", default="unphased_chr"}#CHROMOSOME_INDEX#.${cvalue,name="unphasedGenotypesSuffix",default="vcf"}'/>
<!--
        <filename class="TextFile" derivedFrom="TextFile" selectiontag="unphasedGenotypeChrXFile" 
                  pattern='${imputeOutputDirectory}/${cvalue, name="unphasedGenotypesPrefix", default="unphased_chr"}X.${cvalue,name="unphasedGenotypesSuffix",default="vcf"}'/>
-->
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.addHaploTypes" pattern='${aceseqOutputDirectory}/${pid}_all.snp.haplo.tab.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.createControlBafPlot" pattern='${plotOutputDirectory}/checkpointBaf.txt'/>
        <filename class="TextFile" onMethod="CoverageWindowsFileGroupByChromosome.annotate" selectiontag="annotatedCoverage" pattern='${cnvSnpOutputDirectory}/${pid}.chr#CHROMOSOME_INDEX#.${cvalue,name="CNV_ANNO_SUFFIX"}'/>
        <filename class="TextFile" onMethod="CoverageWindowsFileGroupByChromosome.annotate" selectiontag="genderFile" pattern='${aceseqOutputDirectory}/${pid}_sex.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.replaceControl" pattern='${aceseqOutputDirectory}/checkpointFakeControl.txt'/>
        <filename class="TextFile" onMethod="CoverageWindowsFileAnnotationResult.mergeAndFilterCoverageWindowFiles" pattern='${aceseqOutputDirectory}/${pid}_all.cnv.tab.gz'/>
        <filename class="TextFile" derivedFrom='TextFile' selectiontag='covWinFileWithBadControl' pattern='${aceseqOutputDirectory}/${pid}_all.cnv.tab.gz'/>

        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.correctGC" selectiontag="correctedWindows" pattern='${aceseqOutputDirectory}/${pid}_all.cnv.corrected.tab.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.correctGC" selectiontag="tabSlim" pattern='${plotOutputDirectory}/${pid}_qc_gc_corrected.json'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.correctGC" selectiontag="tab" pattern='${plotOutputDirectory}/${pid}_qc_gc_corrected.tsv'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.pscbsGaps" selectiontag="knownsegments" pattern='${aceseqOutputDirectory}/${pid}_knownsegments.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.pscbsGaps" selectiontag="snpPositions" pattern='${aceseqOutputDirectory}/${pid}_pscbs_data.txt.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeCrest" selectiontag="crestDelDupInvFileTag" pattern='${crestOutputDirectory}/tumor_${pid}.${cvalue,name="crestDelDupInvSuffix",default="DELDUPINV"}'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeCrest" selectiontag="crestTranslocFileTag" pattern='${crestOutputDirectory}/tumor_${pid}.${cvalue,name="crestTransSuffix",default="TX"}'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeCrest" selectiontag="breakpointsSvs" pattern='${aceseqOutputDirectory}/${pid}_breakpoints.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeCrest" selectiontag="svPoints" pattern='${aceseqOutputDirectory}/${pid}_sv_points.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeSv" selectiontag="svFileTag" pattern='${svOutputDirectory}/svs_${pid}_filtered_somatic_minEventScore3.tsv'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeSv" selectiontag="breakpointsSvs" pattern='${aceseqOutputDirectory}/${pid}_breakpoints.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.mergeSv" selectiontag="svPoints" pattern='${aceseqOutputDirectory}/${pid}_sv_points.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.getSegmentAndGetSnps" selectiontag="segments" pattern='${aceseqOutputDirectory}/${pid}_fit.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.markSegsWithHomozygDel" pattern='${aceseqOutputDirectory}/${pid}_homozygous_deletion.txt.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.segsToSnpDataHomodel" pattern='${aceseqOutputDirectory}/${pid}_all_seg.txt.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.clusterPruneSegments" selectiontag="snps" pattern='${aceseqOutputDirectory}/${pid}_all_seg_1.txt.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.clusterPruneSegments" selectiontag="segments" pattern='${aceseqOutputDirectory}/${pid}_clustered_and_pruned_and_normal.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.segsToSnpDataPruned" pattern='${aceseqOutputDirectory}/${pid}_all_seg_2.txt.gz'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.estimatePeaks" pattern='${aceseqOutputDirectory}/${pid}_combi_level.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.estimatePurityPloidy" pattern='${aceseqOutputDirectory}/${pid}_ploidy_purity_2D.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.generatePlots" selectiontag="checkpoint" pattern='${aceseqOutputDirectory}/checkpointPlots.txt'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.generatePlots" selectiontag="json" pattern='${aceseqOutputDirectory}/cnv_${pid}_parameter.json'/>
        <filename class="TextFile" onMethod="de.dkfz.b080.co.aceseq.ACESeqMethods.estimateHRD" pattern='${aceseqOutputDirectory}/checkpointHRD.txt'/>

    </filenames>

</configuration>
